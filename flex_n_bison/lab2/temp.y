/* temp.y - this program solves mathematical problems */
/* how to run? type: bison -d -rall test.y -where "-d" generates report, and "-rall" Reports All*/

%{
#include <stdio.h>
void yyerror(const char *);
extern int yylex(void); /* it is defined externally, so bison will call this function that will be generated by flex, if its not defined either here, or either after rules, then compilation will fail, this function generates TOKENS  */
%}

%error-verbose
%token INT

%%

prog	:	
	| prog line
;

line	: '\n'
	| exp '\n'	{printf(": %d\n", $1);}
	| error '\n'	{yyerrok;}
;

exp	: INT 		{$$ = $1;}
	| exp exp '+'	{$$ = $1 + $2;}
	| exp exp '-'	{$$ = $1 - $2;}
	| exp exp '/'	{$$ = $1 / $2;}
	| exp exp '*'	{$$ = $1 * $2;}
;

%%

void yyerror (const char *s){
	printf ("error %s\n", s);
}

int main (void){
	yyparse();
}
